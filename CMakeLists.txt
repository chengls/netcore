cmake_minimum_required(VERSION 2.6)
project(netcore)
enable_testing()
set(CMAKE_BUILD_TYPE "Debug")
set(CXX_FLAGS "-g -Wall -std=c++11")
message(STATUS ${CXX_FLAGS})
string(REPLACE ";" " " CMAKE_CXX_FLAGS ${CXX_FLAGS})
set(CMAKE_CXX_COMPILER "g++")
set(CMAKE_CXX_FLAGS_DEBUG "-O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
include_directories(${PROJECT_SOURCE_DIR})
string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE)
message(STATUS "CXX_FLAGS = " ${CMAKE_CXX_FLAGS} " " ${CMAKE_CXX_FLAGS_${BUILD_TYPE}})

macro(add_vg_source_dir name)
    file(GLOB SRC_FILE ${name}/*.h ${name}/*.hpp ${name}/*.cc ${name}/*.cpp)
    list(APPEND ALL_SRC ${SRC_FILE})
    source_group(${name} FILES ${SRC_FILE})
endmacro()

add_vg_source_dir(net)
add_vg_source_dir(utils)

add_library(netcore STATIC ${ALL_SRC})

add_subdirectory(test)